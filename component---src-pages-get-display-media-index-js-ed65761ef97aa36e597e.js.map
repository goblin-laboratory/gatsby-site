{"version":3,"sources":["webpack:///./src/pages/get-display-media/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/image.js"],"names":["stopStreamTracks","stream","getTracks","forEach","it","stop","errMsg","getDisplayMedia","_ref","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_5___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default","a","mark","_callee","constraints","wrap","_context","prev","next","global","navigator","mediaDevices","video","sent","abrupt","t0","_x","apply","this","arguments","Form","create","_ref2","form","videoRef","React","useRef","_React$useState","useState","loading","setLoading","_React$useState2","setConstraints","_React$useState3","setStream","_React$useState4","videoInfo","setVideoInfo","useEffect","_ref3","_callee2","mediaStream","_context2","current","srcObject","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_18__","_components_seo__WEBPACK_IMPORTED_MODULE_20__","title","keywords","href","antd__WEBPACK_IMPORTED_MODULE_10__","style","marginBottom","antd__WEBPACK_IMPORTED_MODULE_11__","onSubmit","e","preventDefault","validateFieldsAndScroll","errors","_ref4","resolution","values","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2___default","_resolution$split","split","width","height","Object","assign","antd__WEBPACK_IMPORTED_MODULE_12__","gutter","antd__WEBPACK_IMPORTED_MODULE_13__","span","Item","required","label","labelCol","wrapperCol","getFieldDecorator","initialValue","antd__WEBPACK_IMPORTED_MODULE_14__","map","Option","value","key","valuePropName","antd__WEBPACK_IMPORTED_MODULE_15__","offset","antd__WEBPACK_IMPORTED_MODULE_16__","type","htmlType","disabled","onClick","currentTime","last","frameCount","toFixed","antd__WEBPACK_IMPORTED_MODULE_17__","ref","autoPlay","controls","className","onTimeUpdate","target","webkitDecodedFrameCount","info","videoWidth","videoHeight","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","Header","siteTitle","react_default","background","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","Layout","Fragment","header","paddingTop","Date","getFullYear","_755544856","node","Image","gatsby__WEBPACK_IMPORTED_MODULE_2__","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fluid","placeholderImage","childImageSharp","_public_static_d_2011440971_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-get-display-media-index-js-ed65761ef97aa36e597e.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"antd/dist/antd.css\"\nimport { Row, Col, Card, Form, Select, Switch, Button, Divider } from \"antd\"\n\nimport Layout from \"../../components/layout\"\nimport Image from \"../../components/image\"\nimport SEO from \"../../components/seo\"\nimport styles from \"./index.css\"\n\nconst stopStreamTracks = stream => {\n  if (!stream || !stream.getTracks) {\n    return\n  }\n  try {\n    const tracks = stream.getTracks()\n    tracks.forEach(it => {\n      try {\n        it.stop()\n      } catch (errMsg) {\n        // debugger;\n      }\n    })\n  } catch (errMsg) {\n    // debugger;\n  }\n}\n\nconst getDisplayMedia = async constraints => {\n  try {\n    const stream = await global.navigator.mediaDevices.getDisplayMedia({\n      video: constraints,\n    })\n    return stream\n  } catch (errMsg) {\n    return null\n  }\n}\n\nconst GetDisplayMedia = ({ form }) => {\n  const videoRef = React.useRef(null)\n  const [loading, setLoading] = React.useState(false)\n  const [constraints, setConstraints] = React.useState(null)\n  const [stream, setStream] = React.useState(null)\n  const [videoInfo, setVideoInfo] = React.useState(null)\n\n  React.useEffect(() => {\n    const onSubmit = async () => {\n      if (loading) {\n        return\n      }\n      setLoading(true)\n      stopStreamTracks(stream)\n      setStream(null)\n      if (!constraints) {\n        setLoading(false)\n        return;\n      }\n      const mediaStream = await getDisplayMedia(constraints)\n      // if (!loading) {\n      //   return\n      // }\n      setStream(mediaStream)\n      setLoading(false)\n    }\n    onSubmit()\n    return () => {\n      // setLoading(false)\n    }\n  }, [constraints])\n\n  React.useEffect(() => {\n    setVideoInfo(null)\n    if (stream && videoRef && videoRef.current) {\n      videoRef.current.srcObject = stream\n    }\n    return () => {\n      // stopStreamTracks(stream)\n      // setStream(null)\n    }\n  }, [stream])\n\n  const onTimeUpdate = e => {\n    const current = {\n      frameCount: e.target.webkitDecodedFrameCount,\n      currentTime: e.target.currentTime,\n    }\n    const info = {\n      width: e.target.videoWidth,\n      height: e.target.videoHeight,\n    }\n\n    if (!videoInfo) {\n      info.current = current\n      info.last = current\n    } else {\n      if (1 < current.currentTime - videoInfo.current.currentTime) {\n        info.current = current\n        info.last = videoInfo.current\n      } else {\n        info.current = videoInfo.current\n        info.last = videoInfo.last\n      }\n    }\n    setVideoInfo(info)\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"getDisplayMedia\" keywords={[`getDisplayMedia`]} />\n      <h1>getDisplayMedia</h1>\n      <p>\n        <a href=\"https://w3c.github.io/mediacapture-screen-share.\">参考文档</a>\n      </p>\n      {/* <p>Now go build something great.</p> */}\n      <Card title=\"参数\" style={{ marginBottom: 16 }}>\n        <Form\n          onSubmit={e => {\n            e.preventDefault()\n            form.validateFieldsAndScroll(\n              (errors, { resolution, ...values }) => {\n                if (errors) {\n                  return\n                }\n                const [width, height] = resolution.split(\"x\")\n                setConstraints({ ...values, width, height })\n              }\n            )\n          }}\n        >\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                required\n                label=\"分辨率\"\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n              >\n                {form.getFieldDecorator(\"resolution\", {\n                  initialValue: \"1920x1080\",\n                })(\n                  <Select>\n                    {[\"1920x1080\", \"1280x720\", \"960x540\"].map(it => (\n                      <Select.Option value={it} key={it}>\n                        {it}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                required\n                label=\"frameRate\"\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n              >\n                {form.getFieldDecorator(\"frameRate\", {\n                  initialValue: 25,\n                })(\n                  <Select>\n                    {[25, 20, 15].map(it => (\n                      <Select.Option value={it} key={it}>\n                        {it}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                required\n                label=\"aspectRatio\"\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n              >\n                {form.getFieldDecorator(\"aspectRatio\", {\n                  initialValue: 1.7777777777,\n                })(\n                  <Select>\n                    {[1.7777777777, 1.3333333333, 0.5625].map(it => (\n                      <Select.Option value={it} key={it}>\n                        {it}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                required\n                label=\"resizeMode\"\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n              >\n                {form.getFieldDecorator(\"resizeMode\", {\n                  initialValue: \"none\",\n                })(\n                  <Select>\n                    {[\"none\", \"crop-and-scale\"].map(it => (\n                      <Select.Option value={it} key={it}>\n                        {it}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                required\n                label=\"displaySurface\"\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n              >\n                {form.getFieldDecorator(\"displaySurface\", {\n                  initialValue: \"monitor\",\n                })(\n                  <Select>\n                    {[\"monitor\", \"window\", \"application\", \"browser\"].map(it => (\n                      <Select.Option value={it} key={it}>\n                        {it}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                required\n                label=\"logicalSurface\"\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n              >\n                {form.getFieldDecorator(\"logicalSurface\", {\n                  initialValue: false,\n                  valuePropName: \"checked\",\n                })(<Switch />)}\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                required\n                label=\"cursor\"\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n              >\n                {form.getFieldDecorator(\"cursor\", {\n                  initialValue: \"never\",\n                })(\n                  <Select>\n                    {[\"never\", \"always\", \"motion\"].map(it => (\n                      <Select.Option value={it} key={it}>\n                        {it}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={24}>\n              <Form.Item wrapperCol={{ span: 16, offset: 4 }}>\n                <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n                  开始\n                </Button>\n                &nbsp;&nbsp;&nbsp;&nbsp;\n                <Button type=\"default\" disabled={loading || !stream} onClick={() => setConstraints(null)}>\n                  停止\n                </Button>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Card>\n      <Card title=\"视频\">\n        {videoInfo && (\n          <div>\n            分辨率：{videoInfo.width}x{videoInfo.height}，\n            {videoInfo.current.currentTime > videoInfo.last.currentTime && (\n              <span>\n                &nbsp;&nbsp;实时帧率：\n                {(\n                  (videoInfo.current.frameCount - videoInfo.last.frameCount) /\n                  (videoInfo.current.currentTime - videoInfo.last.currentTime)\n                ).toFixed(2)}\n                ，\n              </span>\n            )}\n            {videoInfo.current.currentTime && (\n              <span>\n                &nbsp;&nbsp;平均帧率：\n                {(\n                  videoInfo.current.frameCount / videoInfo.current.currentTime\n                ).toFixed(2)}\n              </span>\n            )}\n            <Divider />\n          </div>\n        )}\n        {stream && (\n          <video\n            ref={videoRef}\n            autoPlay\n            controls\n            className=\"video\"\n            onTimeUpdate={onTimeUpdate}\n          />\n        )}\n      </Card>\n      {/* <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n        <Image />\n      </div>\n      <Link to=\"/page-2/\">Go to page 2</Link> */}\n    </Layout>\n  )\n}\n\n// class GetDisplayMedia extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       stream: null,\n//     }\n//   }\n\n//   render() {\n//     return (\n//       <Layout>\n//         <SEO title=\"getDisplayMedia\" keywords={[`getDisplayMedia`]} />\n//         <h1>getDisplayMedia</h1>\n//         <p>\n//           <a href=\"https://w3c.github.io/mediacapture-screen-share.\">\n//             https://w3c.github.io/mediacapture-screen-share.\n//           </a>\n//         </p>\n//         <p>Now go build something great.</p>\n//         <Row gutter={16}>\n//           <Col span={12}>\n//             <Card title=\"参数\">Form</Card>\n//           </Col>\n//           <Col span={12}>\n//             <Card title=\"视频\">Video</Card>\n//           </Col>\n//         </Row>\n//         <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n//           <Image />\n//         </div>\n//         <Link to=\"/page-2/\">Go to page 2</Link>\n//       </Layout>\n//     )\n//   }\n// }\n\nexport default Form.create()(GetDisplayMedia)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n"],"sourceRoot":""}